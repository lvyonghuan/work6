// Code generated by goctl. DO NOT EDIT.
// Source: get.proto

package get

import (
	"context"

	"work6/microservice_test/go-zero_test/rpc/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = rpc.Request
	Response = rpc.Response

	Get interface {
		Creat(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		GetInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultGet struct {
		cli zrpc.Client
	}
)

func NewGet(cli zrpc.Client) Get {
	return &defaultGet{
		cli: cli,
	}
}

func (m *defaultGet) Creat(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := rpc.NewGetClient(m.cli.Conn())
	return client.Creat(ctx, in, opts...)
}

func (m *defaultGet) GetInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := rpc.NewGetClient(m.cli.Conn())
	return client.GetInfo(ctx, in, opts...)
}
