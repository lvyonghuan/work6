// Code generated by Kitex v0.6.1. DO NOT EDIT.

package nlp

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	nlp "work6/gotuber-test-demo/kitex_gen/nlp"
)

func serviceInfo() *kitex.ServiceInfo {
	return nlpServiceInfo
}

var nlpServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "nlp"
	handlerType := (*nlp.Nlp)(nil)
	methods := map[string]kitex.MethodInfo{
		"handel": kitex.NewMethodInfo(handelHandler, newNlpHandelArgs, newNlpHandelResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "nlp",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.6.1",
		Extra:           extra,
	}
	return svcInfo
}

func handelHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*nlp.NlpHandelArgs)
	realResult := result.(*nlp.NlpHandelResult)
	success, err := handler.(nlp.Nlp).Handel(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newNlpHandelArgs() interface{} {
	return nlp.NewNlpHandelArgs()
}

func newNlpHandelResult() interface{} {
	return nlp.NewNlpHandelResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Handel(ctx context.Context, req *nlp.Request) (r *nlp.Response, err error) {
	var _args nlp.NlpHandelArgs
	_args.Req = req
	var _result nlp.NlpHandelResult
	if err = p.c.Call(ctx, "handel", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
